# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  discord: teka23/discord@0.0.1
  heroku: circleci/heroku@1.2.6

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    steps:
      # Checkout the code as the first step.
      - checkout
      - setup_remote_docker
      - heroku/install
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
            mvn spring-boot:build-image -Dspring-boot.build-image.imageName=hejnaluk/game-news-crawler:latest      
            mvn spring-boot:build-image -Dspring-boot.build-image.imageName=game-news-crawler:latest            
            docker push hejnaluk/game-news-crawler:latest
            
            echo "Heroku login"
            heroku container:login
            echo "Heroku push"
            heroku container:push -a game-news-crawler --recursive
      - heroku/push-docker-image:
          recursive: true
      # Notify discord channel
      - discord/notify:
          color: '4383476'
      # Notify discord channel
      - discord/status:
          fail_only: true

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample: 
    jobs:
      - build-and-test
      
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                main
    jobs:
      - build-and-test
